import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { useToast } from '@/hooks/use-toast';
import Icon from '@/components/ui/icon';
import { Label } from '@/components/ui/label';

const PushNotificationsPage = () => {
  const [title, setTitle] = useState('');
  const [body, setBody] = useState('');
  const [url, setUrl] = useState('/');
  const [sending, setSending] = useState(false);
  const { toast } = useToast();
  const navigate = useNavigate();

  const templates = [
    {
      name: '–°–∫–∏–¥–∫–∞ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è',
      title: 'üéâ –°–∫–∏–¥–∫–∞ 20% –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ!',
      body: '–ó–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –Ω–∞ —ç—Ç–∏ –≤—ã—Ö–æ–¥–Ω—ã–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 20%. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ!',
      url: '/promotions'
    },
    {
      name: '–ù–æ–≤–∞—è –∞–∫—Ü–∏—è',
      title: '‚ú® –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
      body: '–ù–æ–≤–∞—è –∞–∫—Ü–∏—è! –ë—Ä–æ–Ω–∏—Ä—É–π—Ç–µ –æ—Ç 3 –Ω–æ—á–µ–π –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 15%',
      url: '/promotions'
    },
    {
      name: '–°–µ–∑–æ–Ω–Ω–∞—è –∞–∫—Ü–∏—è',
      title: 'üçÇ –û—Å–µ–Ω–Ω–∏–µ —Å–∫–∏–¥–∫–∏ –¥–æ 30%',
      body: '–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∑–æ–ª–æ—Ç–æ–π –æ—Å–µ–Ω—å—é –≤ –ú–æ—Å–∫–≤–µ! –°–∫–∏–¥–∫–∏ –¥–æ 30% –Ω–∞ –≤—Å–µ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã',
      url: '/'
    },
    {
      name: '–†–∞–Ω–Ω–µ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
      title: '‚è∞ –†–∞–Ω–Ω–µ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
      body: '–ó–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ –∏ —Å—ç–∫–æ–Ω–æ–º—å—Ç–µ! –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –Ω–∞ –±—É–¥—É—â–∏–µ –¥–∞—Ç—ã',
      url: '/booking'
    }
  ];

  const handleTemplateSelect = (template: typeof templates[0]) => {
    setTitle(template.title);
    setBody(template.body);
    setUrl(template.url);
  };

  const handleSendNotification = async () => {
    if (!title.trim() || !body.trim()) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
        variant: 'destructive'
      });
      return;
    }

    setSending(true);
    try {
      const response = await fetch('https://functions.poehali.dev/36f610d6-e5b4-4e1a-852d-7cba847873cd', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          title,
          body,
          url,
          tag: 'owner-notification'
        })
      });

      if (response.ok) {
        toast({
          title: '–£—Å–ø–µ—à–Ω–æ!',
          description: 'Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º',
        });
        setTitle('');
        setBody('');
        setUrl('/');
      } else {
        throw new Error('Failed to send notification');
      }
    } catch (error) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
        variant: 'destructive'
      });
    } finally {
      setSending(false);
    }
  };

  const handleTestNotification = () => {
    if ('Notification' in window && Notification.permission === 'granted') {
      new Notification(title || 'P9 –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã', {
        body: body || '–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
        icon: 'https://cdn.poehali.dev/projects/71cc1cad-d51c-42e2-a128-9fd9502921a6/files/143e469d-5802-4200-9887-ffd01c3e42aa.jpg',
        badge: 'https://cdn.poehali.dev/projects/71cc1cad-d51c-42e2-a128-9fd9502921a6/files/143e469d-5802-4200-9887-ffd01c3e42aa.jpg'
      });
      toast({
        title: '–¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω',
        description: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ'
      });
    } else {
      toast({
        title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã',
        description: '–†–∞–∑—Ä–µ—à–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è —Ç–µ—Å—Ç–∞',
        variant: 'destructive'
      });
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-charcoal-900 via-charcoal-800 to-charcoal-900 p-4">
      <div className="max-w-5xl mx-auto space-y-6">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold text-white flex items-center gap-3">
              <Icon name="Bell" size={32} className="text-gold-500" />
              Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            </h1>
            <p className="text-white/70 mt-1">–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º</p>
          </div>
          <Button
            variant="outline"
            onClick={() => navigate('/owner-dashboard')}
            className="gap-2"
          >
            <Icon name="ArrowLeft" size={16} />
            –ù–∞–∑–∞–¥
          </Button>
        </div>

        <div className="grid lg:grid-cols-2 gap-6">
          <div className="space-y-6">
            <Card className="bg-charcoal-800/50 border-gold-500/20">
              <CardHeader>
                <CardTitle className="text-white">–°–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</CardTitle>
                <CardDescription className="text-white/70">
                  –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <Label htmlFor="title" className="text-white">–ó–∞–≥–æ–ª–æ–≤–æ–∫</Label>
                  <Input
                    id="title"
                    value={title}
                    onChange={(e) => setTitle(e.target.value)}
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –°–∫–∏–¥–∫–∞ 20% –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ!"
                    maxLength={50}
                    className="bg-charcoal-900/50 border-gold-500/20 text-white"
                  />
                  <p className="text-xs text-white/50">{title.length}/50 —Å–∏–º–≤–æ–ª–æ–≤</p>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="body" className="text-white">–¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Label>
                  <Textarea
                    id="body"
                    value={body}
                    onChange={(e) => setBody(e.target.value)}
                    placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è..."
                    rows={4}
                    maxLength={120}
                    className="bg-charcoal-900/50 border-gold-500/20 text-white resize-none"
                  />
                  <p className="text-xs text-white/50">{body.length}/120 —Å–∏–º–≤–æ–ª–æ–≤</p>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="url" className="text-white">–°—Å—ã–ª–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ</Label>
                  <Input
                    id="url"
                    value={url}
                    onChange={(e) => setUrl(e.target.value)}
                    placeholder="/promotions"
                    className="bg-charcoal-900/50 border-gold-500/20 text-white"
                  />
                  <p className="text-xs text-white/50">–ö—É–¥–∞ –ø–µ—Ä–µ–π–¥–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏ –∫–ª–∏–∫–µ</p>
                </div>

                <div className="flex gap-2 pt-4">
                  <Button
                    onClick={handleSendNotification}
                    disabled={sending || !title || !body}
                    className="flex-1 bg-gradient-to-r from-gold-500 to-amber-500 hover:from-gold-600 hover:to-amber-600 text-white font-semibold"
                  >
                    {sending ? (
                      <>
                        <Icon name="Loader2" size={16} className="animate-spin mr-2" />
                        –û—Ç–ø—Ä–∞–≤–∫–∞...
                      </>
                    ) : (
                      <>
                        <Icon name="Send" size={16} className="mr-2" />
                        –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º
                      </>
                    )}
                  </Button>
                  
                  <Button
                    onClick={handleTestNotification}
                    variant="outline"
                    disabled={!title || !body}
                    className="gap-2"
                  >
                    <Icon name="TestTube" size={16} />
                    –¢–µ—Å—Ç
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>

          <div className="space-y-6">
            <Card className="bg-charcoal-800/50 border-gold-500/20">
              <CardHeader>
                <CardTitle className="text-white">–®–∞–±–ª–æ–Ω—ã</CardTitle>
                <CardDescription className="text-white/70">
                  –ë—ã—Å—Ç—Ä–æ —Å–æ–∑–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ —à–∞–±–ª–æ–Ω–∞
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-3">
                {templates.map((template, index) => (
                  <div
                    key={index}
                    onClick={() => handleTemplateSelect(template)}
                    className="p-4 bg-charcoal-900/50 border border-gold-500/10 rounded-lg cursor-pointer hover:border-gold-500/30 hover:bg-charcoal-900/70 transition-all group"
                  >
                    <h3 className="font-semibold text-white group-hover:text-gold-400 transition-colors flex items-center gap-2">
                      <Icon name="FileText" size={16} className="text-gold-500" />
                      {template.name}
                    </h3>
                    <p className="text-sm text-white/70 mt-1">{template.title}</p>
                    <p className="text-xs text-white/50 mt-1 line-clamp-2">{template.body}</p>
                  </div>
                ))}
              </CardContent>
            </Card>

            <Card className="bg-blue-900/20 border-blue-500/20">
              <CardHeader>
                <CardTitle className="text-white flex items-center gap-2">
                  <Icon name="Info" size={20} className="text-blue-400" />
                  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-2 text-sm text-white/70">
                <p>‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—É—á–∞—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑—Ä–µ—à–∏–ª–∏ –∏—Ö</p>
                <p>‚Ä¢ –¢–µ—Å—Ç –ø–æ–∫–∞–∂–µ—Ç –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤–∞–º</p>
                <p>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è</p>
                <p>‚Ä¢ –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞: 30-40 —Å–∏–º–≤–æ–ª–æ–≤</p>
                <p>‚Ä¢ –õ—É—á—à–µ–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: 10:00-12:00 –∏ 18:00-20:00</p>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PushNotificationsPage;
